@page "/register"
@rendermode InteractiveServer
@using Infrastructure
@using Core

<PageTitle>Register</PageTitle>

<h1>Register</h1>

<EditForm Model="@Users" OnValidSubmit="RegisterNew">
    <div class="form-group" style="margin-top: 20px;">
        <label>Login:</label>
        <InputText @bind-Value="Users.Login" class="form-control" style="width: 300px;" />
    </div>

    <div class="form-group" style="margin-top: 20px;">
        <label>Email:</label>
        <InputText @bind-Value="Users.Email" class="form-control" style="width: 300px;" />
    </div>

    <div class="form-group" style="margin-top: 20px;">
        <label>Password:</label>
        <InputText @bind-Value="Users.Password" type="password" class="form-control" style="width: 300px;" />
    </div>

    <button class="btn btn-primary" style="margin-top: 20px;">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="
        color:@(ErrorMessage.Contains("success") ? "green" : "red");
        margin-top:20px;">
        @ErrorMessage
    </p>
}

@code {
    private string? ErrorMessage;
    [Inject] private RegisterService? RegisterService { get; set; }

    private Users Users = new();

    private void RegisterNew()
    {
        ErrorMessage = RegisterService.RegisterUser(Users);
    }
}
